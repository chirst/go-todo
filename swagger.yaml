swagger: "2.0"
info:
  description: |-
    The purpose of this application is to model collections of todos owned by authenticated users
  version: 1.0.0
  title: Todo API
host: localhost
basePath: /
schemes:
- http
tags:
- name: "User"
  description: "User authentication and creation"
- name: "Todo"
  description: "CRUD operations on Todos"

definitions:
  schemas:
    Todo:
      properties:
        id:
          type: integer
        name:
          type: string
        completed:
          type: string
          format: date-time
          description: "null if incomplete"
        userId:
          type: integer

    User:
      properties:
        id:
          type: integer
        username:
          type: string

paths:
  /login:
    post:
      summary: "Login a User"
      description: "This provides a way of gaining access to protected routes given valid credentials"
      operationId: LoginUser
      consumes:
      - application/json
      produces:
      - text/plain
      tags:
      - User
      parameters:
      - in: "body"
        name: "body"
        description: "Login credentials"
        required: true
        schema:
          type: "object"
          properties:
            username:
              type: "string"
              example: "gud username"
              maxLength: 256
            password:
              type: "string"
              example: "passwordy1234"
              maxLength: 256
          required:
            - username
            - password
      responses:
        "200":
          description: "Successfully logged in"
          schema:
            type: string
            description: "JSON web token valid for a limited time"
        "400":
          description: "Invalid login body"
        "403":
          description: "Invalid login credentials"

  /todos:
    get:
      summary: "Get all todos for the current user"
      description: Returns a list of all todos belonging to the current user
      operationId: GetTodos
      produces:
      - application/json
      tags:
      - Todo
      responses:
        "200":
          description: "list of todos"
          schema:
            type: array
            items:
              $ref: '#/definitions/schemas/Todo'
    post:
      summary: "Add a single Todo"
      description: Adds a todo belonging to the current user
      operationId: AddTodo
      consumes:
      - application/json
      produces:
      - application/json
      tags:
      - Todo
      parameters:
      - in: "body"
        name: "body"
        description: "Details of Todo to be added"
        required: true
        schema:
          type: "object"
          properties:
            name:
              type: "string"
            completed:
              type: "string"
              format: date-time
              description: "null or exclude if incomplete"
          required:
            - name
      responses:
        "201":
          description: "todo that was created"
          schema:
            $ref: '#/definitions/schemas/Todo'
  /todos/{todoId}/complete:
    patch:
      summary: Complete Todo
      description: Marks the Todo matching todoId as complete
      operationId: CompleteTodo
      produces:
      - text/plain
      tags:
      - Todo

  /users:
    post:
      summary: "Create a new user"
      description: Provides a way of creating a new user who can own todos
      operationId: AddUser
      consumes:
      - application/json
      produces:
      - application/json
      tags:
      - User
      parameters:
      - in: "body"
        name: "body"
        description: "Details of the User to be added"
        required: true
        schema:
          type: "object"
          properties:
            username:
              type: "string"
            password:
              type: "string"
          required:
            - username
            - password
      responses:
        "201":
          description: "user that was created"
          schema:
            $ref: '#/definitions/schemas/User'
